name: Webshop CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.10']

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_USER: ${{ vars.DB_USER }}
          POSTGRES_DB: ${{ vars.DB_NAME }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt
    - name: Run Tests
      run: |
        cd src
        python manage.py test --exclude-tag elastic
      env:
        DB_NAME: ${{ vars.DB_NAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_USER: ${{ vars.DB_USER }}
        DB_PORT: ${{ vars.DB_PORT }}
        DB_HOST: ${{ vars.DB_HOST }}
        STRIPE_PUBLIC_KEY: ${{ secrets.STRIPE_PUBLIC_KEY }}
        STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        ENDPOINT_SECRET: ${{ secrets.ENDPOINT_SECRET }}
    - name: Run Bandit
      run: | 
        bandit -r src
    - name: Run Safety
      run: |
        safety check
      continue-on-error: true
    - name: Run Ruff
      run: |
        ruff src